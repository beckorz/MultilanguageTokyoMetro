<?php

require dirname(__FILE__) . '/../config.php';
date_default_timezone_set('Asia/Tokyo');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-07 at 18:11:53.
 */
class HolidayCtrlTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var HolidayCtrl
     */
    protected $model;
    protected $ctrl;

    public static function setUpBeforeClass()
    {

    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $app = new \Slim\Slim();
        ORM::configure('sqlite::memory:');
        $db = ORM::get_db();
        $this->model = new \Model\HolidayModel($app, $db);
        $this->model->setup();

        $this->ctrl = new \MyLib\HolidayCtrl($this->model);

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        ORM::reset_db();
    }

    function testCheckDayType()
    {
        $dbres201405 = $this->model->getMonthData(2014,5);
        $this->assertEquals( 0, count($dbres201405),'Database is empty.');

        $dbres201401 = $this->model->getMonthData(2014,1);
        $this->assertEquals(0, count($dbres201401), 'Database is empty.');

        $this->assertEquals(
          'holidays' , 
          $this->ctrl->checkDayType(strtotime('2014-01-01T03:00:10+09:00')), 
          '2014/1/1 is holiday.');
        $this->assertEquals(
          'weekdays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-09T03:00:10+09:00')), 
          '2014/5/09 is weekday.');
        $this->assertEquals(
          'saturdays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-10T03:00:10+09:00')), 
          '2014/5/10 is saturday.');
        $this->assertEquals(
          'holidays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-11T03:00:10+09:00')), 
          '2014/5/11 is holiday.');
        $this->assertEquals(
          'weekdays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-12T03:00:10+09:00')), 
          '2014/5/12 is sunday.');

        $this->assertEquals(
          'holidays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-03T03:00:10+09:00')), 
          '2014/5/3 is holiday.');
        $this->assertEquals(
          'holidays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-04T03:00:10+09:00')), 
          '2014/5/4 is holiday.');
        $this->assertEquals(
          'holidays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-05T03:00:10+09:00')), 
          '2014/5/5 is holiday.');
        $this->assertEquals(
          'holidays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-06T03:00:10+09:00')), 
          '2014/5/6 is holiday.');

        $dbres201405 = $this->model->getMonthData(2014,5);
        $this->assertEquals(11, count($dbres201405), 'Database is not empty.');

        $dbres201401 = $this->model->getMonthData(2014,1);
        $this->assertEquals(10, count($dbres201401), 'Database is not empty.');

        // 同じデータがキャッシュから取得される
        $this->assertEquals(
          'holidays' , 
          $this->ctrl->checkDayType(strtotime('2014-01-01T03:00:10+09:00')), 
          '2014/1/1 is holiday by cache.');
        $this->assertEquals(
          'weekdays' , 
          $this->ctrl->checkDayType(strtotime('2014-05-09T03:00:10+09:00')), 
          '2014/5/09 is weekday by cache.');
    }
}
