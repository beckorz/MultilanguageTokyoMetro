<?php


/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-07 at 18:11:53.
 */
class MsTranslatorCacheModelTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var MsTranslatorCacheModel
     */
    protected $object;

    public static function setUpBeforeClass()
    {
        /*
        if (file_exists(PATH)) {
            unlink (PATH);
        }
        */
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $app = new \Slim\Slim();
        ORM::configure('sqlite::memory:');
        $db = ORM::get_db();
        $this->object = new \Model\MsTranslatorCacheModel($app, $db);
        $this->object->setup();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        ORM::reset_db();
    }

    /**
     * キャッシュの追加と取得のテスト
     */
    function testCacheAdd()
    {
        $en_ret = $this->object->getCache('en');
        $this->assertEquals(array(),$en_ret, '存在しない言語は空の配列である');

        $en_inp = array();
        $en_inp += array('ああああああ1'=>'test1');
        $en_inp += array('ああああああ2'=>'test2');
        $en_inp += array('ああああああ3'=>'test3');
        $this->object->addCache('en', $en_inp);

        $ch_inp = array();
        $ch_inp += array('ああああああ1'=>'中1');
        $ch_inp += array('ああああああ2'=>'中2');
        $this->object->addCache('ch', $ch_inp);

        $en_ret = $this->object->getCache('en');
        $this->assertEquals($en_inp, $en_ret , '追加した言語(en)にデータが存在する');

        $ch_ret = $this->object->getCache('ch');
        $this->assertEquals($ch_inp, $ch_ret , '追加した言語(ch)にデータが存在する');

    }

    /**
     * キャッシュの削除のテスト
     */
    function testCacheDelete()
    {
        $en_inp = array();
        $en_inp += array('ああああああ1'=>'test1');
        $en_inp += array('ああああああ2'=>'test2');
        $en_inp += array('ああああああ3'=>'test3');
        $this->object->addCache('en', $en_inp);

        $ch_inp = array();
        $ch_inp += array('ああああああ1'=>'中1');
        $ch_inp += array('ああああああ2'=>'中2');
        $this->object->addCache('ch', $ch_inp);

        $en_ret = $this->object->getCache('en');
        $this->assertEquals($en_inp, $en_ret , '追加した言語(en)にデータが存在する');

        $ch_ret = $this->object->getCache('ch');
        $this->assertEquals($ch_inp, $ch_ret , '追加した言語(ch)にデータが存在する');

        $this->object->deleteCache('en');
        $en_ret = $this->object->getCache('en');
        $this->assertEquals(array(),$en_ret, '削除した言語は取得できないことを確認');

        $ch_ret = $this->object->getCache('ch');
        $this->assertEquals($ch_inp, $ch_ret , '削除していない言語は取得できること');

    }
}
